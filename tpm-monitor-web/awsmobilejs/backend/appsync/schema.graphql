type AllPCRs
{
pcrs: [PCRMeasurement]!
}

type DeviceMeasurement
{
id: ID!
thing_name: String!
device_integrity: String
listening_tcp_ports: Int
listening_udp_ports: Int
tcp_connections: Int
measurement: PCRMeasurement
}

type Metrics
{
cpu: String
memory: String!
network: String
}

type Mutation
{
updatePCR(bootvalue: String!,pcrindex: Int!,runtimevalue: String!,status: String!,thingid: String! ): PCRMeasurement
}

type PCRMeasurement
{
pcrIndex: Int!
kernel_measured_value: String!
pcr_runtime_value: String!
}

type Query
{
listPCRsFor(thing_name: String! ): [PCRMeasurement]
getDeviceMetrics(thing_name: String! ): DeviceMeasurement
}

type Subscription
{
updatedPCR(thingid: String! ): PCRMeasurement
}
